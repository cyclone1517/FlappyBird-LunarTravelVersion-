{"version":3,"sources":["../../js/Director.js"],"names":["Director","instance","DataStore","getInstance","moveSpeed","vertiSpd","minTop","canvas","height","maxTop","top","Math","random","get","push","i","y","birdsY","time","birds","land","pencils","score","birdsHeight","console","log","isGameOver","birdsBorder","bottom","left","birdsX","right","birdsWidth","length","pencil","pencilBorder","x","width","isStrike","isScore","scoreNumber","check","draw","shift","createPencil","self","forEach","value","speedUp","speedUpVerti","move","timer","requestAnimationFrame","run","put","index","array","cancelAnimationFrame","destroy","bird","s"],"mappings":"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","file":"Director.js","sourcesContent":["//导演类 控制游戏逻辑\r\nimport {DataStore} from \"./base/DataStore.js\";\r\nimport {UpPencil} from \"./runtime/UpPencil.js\";\r\nimport {DownPencil} from \"./runtime/DownPencil.js\";\r\n\r\nexport class Director{\r\n    static getIInstance(){\r\n        if(!Director.instance){\r\n            Director.instance = new Director();\r\n        }\r\n        return Director.instance\r\n    }\r\n\r\n    constructor(){\r\n        this.DataStore = DataStore.getInstance();\r\n        this.moveSpeed = 2.0;\r\n        this.vertiSpd = -0.1;\r\n    }\r\n\r\n    createPencil(){\r\n        const minTop = DataStore.getInstance().canvas.height / 8;\r\n        const maxTop = DataStore.getInstance().canvas.height / 2;\r\n        const top = minTop + Math.random() * (maxTop - minTop);\r\n        this.DataStore.get('pencils').push(new UpPencil(top));\r\n        this.DataStore.get('pencils').push(new DownPencil(top));\r\n    }\r\n\r\n    birdsEvent() {\r\n        for(let i=0; i<=2; i++){\r\n            this.DataStore.get('birds').y[i] =\r\n                this.DataStore.get('birds').birdsY[i];\r\n        }\r\n        this.DataStore.get('birds').time = 0;\r\n    }\r\n\r\n    static isStrike(bird, pencil){\r\n        let s = false;\r\n        if(bird.top>pencil.bottom || bird.bottom<pencil.top ||\r\n                bird.right<pencil.left || bird.left>pencil.right){\r\n            s = true;\r\n        }\r\n        //console.log(pencil.top + ',' + pencil.bottom + ',' +pencil.left + ',' + pencil.right);\r\n\r\n        return !s;\r\n    }\r\n\r\n    //撞击判断\r\n    check() {\r\n        const birds = this.DataStore.get('birds');\r\n        const land = this.DataStore.get('land');\r\n        const pencils = this.DataStore.get('pencils');\r\n        const score = this.DataStore.get('score');\r\n        //地板撞击判断\r\n        if(birds.birdsY[0] + birds.birdsHeight[0] >= land.y){\r\n            //console.log(birds.birdsY[0] + ',' + birds.birdsHeight[0] + ',' + land.y);\r\n            console.log('撞击地板啦');\r\n            this.isGameOver = true;\r\n            return;\r\n        }\r\n\r\n        //小鸟的边框模型\r\n        const birdsBorder = {\r\n            top: birds.y[0],\r\n            bottom: birds.birdsY[0] + birds.birdsHeight[0],\r\n            left: birds.birdsX[0],\r\n            right: birds.birdsX[0] + birds.birdsWidth[0] - 5\r\n        };\r\n\r\n        //铅笔边框模型\r\n        const length = pencils.length;\r\n        for(let i=0; i<length; i++){\r\n            const pencil = pencils[i];\r\n            const pencilBorder = {\r\n                top: pencil.y,\r\n                bottom: pencil.y + pencil.height + 5,\r\n                left: pencil.x,\r\n                right: pencil.x + pencil.width\r\n            };\r\n\r\n            if (Director.isStrike(birdsBorder, pencilBorder)){\r\n                console.log('撞到啦！');\r\n                this.isGameOver = true;\r\n            }\r\n        }\r\n\r\n        //加分逻辑\r\n        // console.log(birds.birdsX[0] + ', ' + (pencils[0].x + pencils[0].width) +\r\n        //  ', ' + (birds.birdsX[0] > pencils[0].x + pencils[0].width));\r\n        if (birds.birdsX[0] > pencils[0].x + pencils[0].width\r\n                && score.isScore ) {\r\n            score.isScore = false;\r\n            score.scoreNumber++;\r\n\r\n        } else if(birds.birdsX[0] <= pencils[0].x + pencils[0].width) {\r\n            score.isScore = true;\r\n        }\r\n    }\r\n\r\n    run(){\r\n        this.check();\r\n        if(!this.isGameOver){\r\n            this.DataStore.get('background').draw();\r\n            const pencils = this.DataStore.get('pencils');\r\n            if(pencils[0].x + pencils[0].width <=0 &&\r\n                pencils.length===4){\r\n                pencils.shift();\r\n                pencils.shift();\r\n            }\r\n\r\n            if(pencils[0].x + pencils[0].width/2 <= DataStore.getInstance().canvas.width/2 &&\r\n                pencils.length === 2){\r\n                this.createPencil()\r\n            }\r\n\r\n            let self = this;\r\n            this.DataStore.get('pencils').forEach(function (value) {\r\n                value.speedUp(self.moveSpeed);\r\n                value.speedUpVerti(self.vertiSpd);\r\n                if(self.DataStore.get('score').scoreNumber > 3){\r\n                    value.move();\r\n                }\r\n                value.draw();\r\n                if(self.vertiSpd<0.4) self.vertiSpd += 0.0001;\r\n                //console.log(self.vertiSpd);\r\n            });\r\n\r\n            this.DataStore.get('land').draw();\r\n            this.DataStore.get('score').draw();\r\n            this.DataStore.get('birds').draw();\r\n\r\n            let timer = requestAnimationFrame(()=>this.run());\r\n            this.DataStore.put('timer', timer);\r\n\r\n            //变速部分\r\n            this.moveSpeed += 0.001;\r\n            //console.log(this.moveSpeed);\r\n        }else {\r\n            console.log('游戏结束');\r\n            this.DataStore.get('background').draw();\r\n            this.DataStore.get('pencils').forEach(function (value, index, array) {\r\n                value.draw();\r\n            });\r\n            this.DataStore.get('land').draw();\r\n            this.DataStore.get('score').draw();\r\n            this.DataStore.get('birds').draw();\r\n            this.DataStore.get('startButton').draw();\r\n            cancelAnimationFrame(this.DataStore.get('timer'));\r\n            this.DataStore.destroy();\r\n            this.moveSpeed = 2;\r\n            this.vertiSpd = 0;\r\n        }\r\n    }\r\n}"]}